"use strict";
export namespace Argument.Tre.Packages {
    export const tre_all_module_have_been_loaded = "◉ Loaded fully operational initialized!";
    export const command_execute_in_progress = "◉ Executing command in progress:";
    export const module_available = "◉ Loaded and waiting, select a function to start execute:";
    export const js_shell_error = "Unexpected Error when execute the script";
    export const concat_mode_argument_res = "◉ Execution Argument: Concat Mode";
    export const concat_mode_argument_rton = "◉ Execution Argument: Encode RTON";
    export const concat_atlas_width_argument = "◉ Execution Argument: Concat Width";
    export const concat_atlas_height_argument = "◉ Execution Argument: Concat Height";
    export const popcap_atlas_member_resize_original_quality = "◉ Execution Argument: Original Texture Quality";
    export const popcap_atlas_member_resize_modifier_after_quality = "◉ Execution Argument: Output Texture Quality";
    export const method_split_popcap_atlas_texture = "◉ Execution Argument: Method Split PopCap Textures";
    export const tre_execution_time_after_process = "◉ Execution time:";
    export const unknown_reason = "Unknown";
    export const error_syntax = "Error";
    export const cannot_load_any_modules = "◉ Execution failed: No modules were founded to be applied.";
    export const no_string_has_been_passed = "◉ Execution failed: No arguments provided";
    export const display_cipher_key_readline_argument = "◉ Execution Argument: Cipher Key";
    export const execute_all_files_in_queue = "◉ Execution Argument: Execute all files in queue";
    export const execute_status_finish = "◉ Execution Status: Finish";
    export const execute_file_size = "◉ Execution Size:";
    export const execute_error_log = "◉ Execution Error:";
    export const execute_error_not_valid_directory_path = "is not a directory. Please try again.";
    export const execute_error_not_valid_file_path = "is not a valid path. Please try again.";
    export const execute_reminder_quick_tip = "◉ Execution Reminder: If you don't want to parse more path press enter while given the empty string.";
    export const execute_when_there_is_no_directory_passes_in_tre = "◉ Execution Warning: No Args have been found, please drag a directory here or pass a string to continue the process...";
    export const execution_warning_log = "◉ Execution Warning:";
    export const popcap_texture_atlas_cat_max_rects_bin_display_not_atlas_info = "Not AtlasInfo.json";
    export const popcap_texture_atlas_cat_max_rects_bin_display_cannot_find_groups_array_in_atlasinfo = "Cannot find groups array in AtlasInfo.json";
    export const popcap_texture_atlas_cat_max_rects_bin_display_cannot_find_subgroup_in_atlas_info = "Cannot find subgroup in AtlasInfo.json";
    export const popcap_texture_atlas_cat_max_rects_bin_display_cannot_find_method_in_atlas_info = "Cannot find method in AtlasInfo.json";
    export const popcap_texture_atlas_cat_max_rects_bin_display_cannot_get_res_data_from_this_atlas_info = "Cannot get res data";
    export const popcap_texture_atlas_cat_max_rects_bin_display_not_found_res_indicated_in_subgroups = "Not found res data indicated in subgroup";
    export const popcap_texture_atlas_cat_max_rects_bin_display_total_sprites_sheet_process_in_this_void = "◉ Execution Sprites Process: ";
    export const popcap_texture_atlas_cat_max_rects_bin_boolean_question_iz_thiz_pack_smart_pack = "◉ Execution Argument: Smart Packing Area";
    export const popcap_texture_atlas_cat_max_rects_bin_boolean_question_iz_thiz_pack_pot = "◉ Execution Argument: Pot Packing";
    export const popcap_texture_atlas_cat_max_rects_bin_boolean_question_iz_thiz_pack_iz_square = "◉ Execution Argument: Square Area Force";
    export const popcap_texture_atlas_cat_max_rects_bin_boolean_question_iz_thiz_pack_can_be_allow_for_rotation = "◉ Execution Argument: Allow Rotation";
    export const popcap_texture_atlas_cat_max_rects_bin_boolean_question_padding_size_for_max_rects_bin = "◉ Execution Argument: Padding Size";
    export const popcap_game_zlib_compression_rsgp_unpack_boolean_decode_ptx_for_ptx_rsgp = "◉ Execution Argument: Decode PTX";
    export const popcap_game_rewrite_mode = "◉ Execution Argument: Rewrite Mode";
    export const popcap_res_to_atlasinfo_notify_atlas_info_method = "◉ Execution Argument: AtlasInfo method";
    export const tre_void_json_patch_ask_drag_file = "◉ Execution Argument: Drag JSON apply patch";
    export const tre_void_json_patch_finish_apply_patch = "◉ Execution Finish: Applied patch";
    export const tre_void_json_patch_generator_execution_received = "◉ Execution Received: Old JSON";
    export const tre_void_json_patch_generator_new_execution_generator = "◉ Execution Argument: New JSON";
    export const tre_void_json_patch_finish_write_patch = "◉ Execution Finish: Generated patch";
    export const tre_void_upscaler_real_esrgan_upscale_model = "◉ Execution Argument: Real-ESRGAN Upscale Model";
    export const tre_void_upscaler_real_esrgan_upscale_ratio = "◉ Execution Argument: Real-ESRGAN Upscale Ratio";
}